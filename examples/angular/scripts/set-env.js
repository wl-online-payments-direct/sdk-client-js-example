const fs = require('fs');
const path = require('path');

// Read .env.development file
const envPath = path.resolve(__dirname, '../.env.development');
const targetPath = path.resolve(__dirname, '../src/config.ts');

function parseEnvFile(filePath) {
  if (!fs.existsSync(filePath)) {
    console.warn(`Warning: ${filePath} does not exist. Using defaults.`);
    return {};
  }

  const content = fs.readFileSync(filePath, 'utf8');
  const env = {};

  content.split('\n').forEach((line) => {
    const trimmed = line.trim();
    if (trimmed && !trimmed.startsWith('#')) {
      const [key, ...valueParts] = trimmed.split('=');
      if (key) {
        env[key.trim()] = valueParts.join('=').trim();
      }
    }
  });

  return env;
}

const env = parseEnvFile(envPath);

const useMockApi = env.USE_MOCK_API || 'false';
const mockApiUrl = env.API_URL || '';

const environmentFileContent = `// This file is auto-generated by scripts/set-env.js
// Do not edit manually - your changes will be overwritten
export const useMockApi = ${useMockApi === 'true'};
export const mockApiUrl = '${mockApiUrl}';
`;

fs.writeFileSync(targetPath, environmentFileContent, 'utf8');
console.log(`Environment file generated at ${targetPath}`);
console.log(`  useMockApi: ${useMockApi === 'true'}`);
console.log(`  mockApiUrl: ${mockApiUrl}`);
